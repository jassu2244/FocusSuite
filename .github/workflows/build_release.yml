name: Build and Release Executables

# This workflow runs on every push to the 'main' branch for testing.
# For production, you should change the trigger to run on releases.
on:
  push:
    branches: [ main ]
  # To run this only when you create a new release, uncomment the following:
  # release:
  #   types: [created]

jobs:
  build:
    strategy:
      # Don't cancel all jobs if one fails
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install System Dependencies (Tesseract & FFmpeg)
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            choco install tesseract-ocr ffmpeg --no-progress
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install tesseract ffmpeg
          else
            sudo apt-get update
            sudo apt-get install -y tesseract-ocr ffmpeg
          fi

      - name: Install Python Dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          # IMPORTANT: Your requirements.txt file should NOT contain pywin32.
          # It is installed in the next step only on Windows.
          pip install -r requirements.txt

      - name: Install Windows-specific dependencies
        if: runner.os == 'Windows'
        run: pip install pywin32

      - name: Build with PyInstaller
        # Explicitly use bash shell for all OSes to ensure consistent
        # handling of the multi-line command below.
        shell: bash
        run: |
          pyinstaller --name FocusSuite \
            --windowed \
            --onefile \
            --add-data "FocusSuite/about.txt:." \
            --add-data "FocusSuite/ai.txt:." \
            --hidden-import cv2 \
            --collect-all moviepy \
            FocusSuite/main.py

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: FocusSuite-${{ matrix.os }}
          # The executable and other files will be in the 'dist' directory
          path: dist/

