name: Build and Release Executables

# For testing, this runs on every push to the 'main' branch.
# IMPORTANT: Once you are done testing, change this back to the 'release' trigger.
on:
  push:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # Step 3: Install essential system dependencies (Tesseract and FFmpeg)
      - name: Install System Dependencies
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            choco install tesseract-ocr ffmpeg
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install tesseract ffmpeg
          else
            sudo apt-get update
            sudo apt-get install -y tesseract-ocr ffmpeg

      # Step 4: Install Python dependencies
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          # Install all common packages
          pip install -r requirements.txt --ignore-installed pywin32
      
      # Step 4.1: Install Windows-specific dependencies only on Windows
      - name: Install Windows-specific dependencies
        if: matrix.os == 'windows-latest'
        run: pip install pywin32

      # Step 5: Build the executable with PyInstaller
      - name: Build with PyInstaller
        run: >
          pyinstaller --name FocusSuite 
          --windowed 
          --onefile 
          --add-data "FocusSuite/FocusSuite/about.txt:." 
          --add-data "FocusSuite/FocusSuite/ai.txt:." 
          FocusSuite/FocusSuite/main.py

      # Step 6: Upload the build artifact for testing
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: FocusSuite-${{ matrix.os }}
          path: dist/
